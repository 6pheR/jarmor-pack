name: Build & Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            os: ubuntu-latest
            ext: ""
          - name: windows-x86_64
            os: windows-latest
            ext: ".exe"
          - name: macos-x86_64
            os: macos-latest
            ext: ""
          - name: macos-arm64
            os: macos-14
            ext: ""
            target: aarch64-apple-darwin

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target || '' }}

      - name: Add target if cross-compiling
        if: matrix.target != ''
        run: rustup target add ${{ matrix.target }}

      - name: Build project
        run: |
          if [ -z "${{ matrix.target }}" ]; then
            cargo build --release
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        shell: bash

      - name: Rename binary
        run: |
          BIN_NAME="jarmor-pack"
          TARGET_DIR="target/release"
          if [ -n "${{ matrix.target }}" ]; then
            TARGET_DIR="target/${{ matrix.target }}/release"
          fi
          mv "$TARGET_DIR/$BIN_NAME${{ matrix.ext }}" "$BIN_NAME-${{ matrix.name }}${{ matrix.ext }}"
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jarmor-pack-${{ matrix.name }}
          path: jarmor-pack-${{ matrix.name }}*
  
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
